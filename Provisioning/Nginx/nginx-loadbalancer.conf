events{}
http {
  upstream upstream_server {
  hash $remote_addr;
    server server1_ip:443;
    server server2_ip:443;
  }

  server {
    listen 80 default_server;
    server_name www.upstream_server.com;
    server_tokens off;
    return 301 https://upstream_server.com$request_uri;
  }

  server {

    listen 443 ssl http2; # managed by Certbo
	server_name host.com;
    server_tokens off;
    ssl_certificate /etc/letsencrypt/live/host_server.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/host_server.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    ##
	# Security Settings
	##
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Content-Security-Policy "default-src https: data: 'unsafe-inline' 'unsafe-eval'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains" always;
    add_header Public-Key-Pins "pin-sha256='X3pGTSOuJeEVw989IJ/cEtXUEmy52zs1TZQrU06KUKg=';
    pin-sha256='MHJYVThihUrJcxW6wcqyOISTXIsInsdj3xK8QrZbHec=';
    pin-sha256='isi41AizREkLvvft0IRW4u3XMFR2Yg7bvrF7padyCJg=';
    includeSubdomains; max-age=2592000" always;
    add_header X-Xss-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;

    ##
	# Gzip Settings
	##


	gzip on;
	gzip_disable "msie6";

	gzip_vary on;
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
    gzip_types application/x-javascript text/css application/javascript text/javascript text/plain text/xml application/json application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/xml font/eot font/opentype font/otf image/svg+xml image/vnd.microsoft.icon;
    gzip_disable "MSIE [1-6]\.";

    location / {
    proxy_set_header Host $host;
	proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header X-Real_IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;

    # This is necessary to pass the correct IP to be hashed
    real_ip_header X-Real-IP;

    proxy_pass https://upstream_server;

    proxy_redirect off;

   }
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
  }

}
